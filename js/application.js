// Generated by CoffeeScript 1.6.3
(function() {
  $(document).ready(function() {
    var $domflagsPanel, $domtree, $treeDomflags;
    $domflagsPanel = $('.domflags-panel');
    $domtree = $('.dom-tree');
    $treeDomflags = $domtree.find('span').filter(function() {
      $('#line-2').addClass('non-flaggable');
      if ($(this).hasClass('s')) {
        $(this).parent().addClass('flaggable');
      }
      return $(this).text() === "domflag";
    });
    $treeDomflags.addClass('domflag-attr').parent().addClass('domflag-line');
    $domflagsPanel.on('click', 'li', function() {
      var $domtreeBottom, $domtreeTop, $el, $elPos, index;
      index = $domflagsPanel.find('li').index(this);
      $el = $domtree.find('.domflag-line').eq(index);
      $domflagsPanel.find('li').removeClass('active');
      $(this).addClass('active');
      $domtree.find('span').removeClass('selected');
      $el.addClass('selected');
      $elPos = $el.offset().top;
      $domtreeTop = $domtree.offset().top;
      $domtreeBottom = $domtreeTop + $domtree.height();
      if (!($elPos > $domtreeTop && $elPos < $domtreeBottom)) {
        return $domtree.scrollTo('.domflag-line.selected');
      }
    });
    $('#start-demo').on('click', function() {
      $('.devtools-toolbar').addClass('open');
      $('.devtools').addClass('open');
      $domflagsPanel.addClass('open');
      return false;
    });
    $('.dom-tree code > span').find('span:last-of-type').after('<span class="tooltip">Add Domflag</span>');
    return $('.tooltip').on('click', function() {
      var $domflagStr, $parent, elString, flagItem, index, stringArray;
      $domflagStr = '<span class="na domflag-attr">domflag</span>';
      $parent = $(this).parent();
      if ($parent.hasClass('domflag-line')) {
        index = $parent.index('.domflag-line');
        $domflagsPanel.find('li').eq(index).remove();
        return $parent.removeClass('domflag-line').find('.domflag-attr').remove();
      } else {
        elString = [];
        stringArray = $(this).siblings().contents().filter(function(index) {
          var string;
          if (!this.data.match(/\>/g)) {
            string = this.data;
            if (index === 0) {
              string = this.data.toUpperCase() + " ";
            }
            return elString.push(string.replace(/</g, ' ').replace(/\= /, '='));
          }
        });
        flagItem = "<li class='flag'>" + (elString.join("")) + "</li>";
        $('ol.flags').append(flagItem);
        return $parent.addClass('domflag-line').find('.s').after($domflagStr);
      }
    });
  });

}).call(this);
