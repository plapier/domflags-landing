// Generated by CoffeeScript 1.7.1
(function() {
  var SetupDemo, documentStr;

  $(document).ready(function() {
    var myCodeMirror;
    myCodeMirror = CodeMirror(document.getElementById('domtree'), {
      value: documentStr,
      mode: 'htmlmixed',
      readOnly: true,
      cursorBlinkRate: 0,
      lineWrapping: false,
      lineNumbers: false,
      foldGutter: true,
      foldCode: true,
      gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"]
    });
    myCodeMirror.foldCode(CodeMirror.Pos(4, 0), {
      widget: "..."
    });
    myCodeMirror.on("change", function() {
      return console.log("foo");
    });
    return new SetupDemo();
  });

  SetupDemo = (function() {
    function SetupDemo() {
      this.panel = $('.domflags-panel');
      this.tree = $('.CodeMirror-code');
      this.treeLines = this.tree.find('pre > span');
      this.treeFlags = this.getTreeFlags();
      this.setupTree();
      this.demoEvents();
      this.panelEvents();
      this.tooltipEvents();
    }

    SetupDemo.prototype.getTreeFlags = function() {
      return this.tree.find('span').filter(function() {
        if ($(this).hasClass('cm-attribute')) {
          $(this).parent().addClass('flaggable');
        }
        return $(this).text() === "domflag";
      });
    };

    SetupDemo.prototype.setupTree = function() {
      var tooltipStr;
      tooltipStr = '<span class="tooltip">Add Domflag</span>';
      this.treeFlags.addClass('domflag-attr').parent().addClass('domflag-line');
      this.treeLines.find('span:last-of-type').after(tooltipStr).end().filter('.domflag-line').find('.tooltip').text('Remove Domflag');
      return $('#line-2').addClass('non-flaggable');
    };

    SetupDemo.prototype.demoEvents = function() {
      return $('#start-demo').on('click', (function(_this) {
        return function(event) {
          $(event.currentTarget).addClass('hide').parent().addClass('show-download');
          $('.devtools-toolbar, .devtools').addClass('open');
          _this.panel.addClass('open').find('li:first-child').addClass('demo');
          return false;
        };
      })(this));
    };

    SetupDemo.prototype.panelEvents = function() {
      $('.devtools').on("transitionend webkitTransitionEnd", function() {
        $('.browser').addClass('open');
        $('#start-demo').addClass('hide');
        return $('#download').addClass('show');
      });
      return this.panel.on('click', 'li', (function(_this) {
        return function(event) {
          var $el, $elPos, $target, index, treeBottom, treeTop;
          index = _this.panel.find('li').index(event.currentTarget);
          $el = _this.tree.find('.domflag-line').eq(index);
          $target = $('.target');
          if ($(event.currentTarget).hasClass('demo') && index < 2) {
            $target.addClass("pos-" + (index + 1));
            $(event.currentTarget).next().addClass('demo');
          } else {
            $target.hide();
          }
          _this.panel.find('li').removeClass('active').end().find(event.currentTarget).addClass('active').removeClass('demo new');
          _this.tree.find('span').removeClass('selected');
          $el.addClass('selected');
          $elPos = $el.offset().top;
          treeTop = _this.tree.offset().top;
          treeBottom = treeTop + $('#domtree').height();
          if (!($elPos > treeTop && $elPos < treeBottom)) {
            return $('.CodeMirror-scroll').scrollTo('.domflag-line.selected');
          }
        };
      })(this));
    };

    SetupDemo.prototype.tooltipEvents = function() {
      return $('.tooltip').on('click', (function(_this) {
        return function(event) {
          var $domflagStr, $parent, elString, flagItem, index, stringArray;
          $domflagStr = '<span class="na domflag-attr">domflag</span>';
          $parent = $(event.currentTarget).parent();
          if ($parent.hasClass('domflag-line')) {
            index = $parent.index('.domflag-line');
            $(event.currentTarget).text('Add Domflag');
            $(_this.panel).find('li').eq(index).remove();
            return $parent.removeClass('domflag-line').find('.domflag-attr').remove();
          } else {
            $(event.currentTarget).text('Remove Domflag');
            elString = [];
            stringArray = $(event.currentTarget).siblings().contents().filter(function(index) {
              var string;
              if (!this.data.match(/\>/g)) {
                string = this.data;
                if (index === 0) {
                  string = this.data.toUpperCase() + " ";
                }
                return elString.push(string.replace(/</g, ' ').replace(/\= /, '='));
              }
            });
            $parent.addClass('domflag-line').find('.cm-string').after($domflagStr);
            index = $parent.index('.domflag-line');
            flagItem = "<li class='flag new'>" + (elString.join("")) + "</li>";
            if (index < $('ol.flags li').length) {
              return $('ol.flags li').eq(index).before(flagItem);
            } else {
              return $('ol.flags').append(flagItem);
            }
          }
        };
      })(this));
    };

    return SetupDemo;

  })();

  documentStr = "<!DOCTYPE html>\n<html lang=\"en\">\n  <head></head>\n  <body data-attr=\"1\">\n    <section class=\"main\">\n      <section class=\"browser\">\n        <div class=\"header\"domflag>\n          <div class=\"browser-button\"></div>\n          <div class=\"browser-button\"></div>\n          <div class=\"browser-button\"></div>\n        </div>\n        <div class=\"body\">..</div>\n        <div class=\"devtool-toolbar\"></div>\n        <section class=\"devtools\"domflag>\n          <div class=\"domflags-panel\">\n            <header class=\"title\">DOMFLAGS</header>\n            <ol class=\"flags\">\n              <li class=\"flag\">DIV class=\"header\"</li>\n              <li class=\"flag\">SECTION class=\"devtools\"</li>\n              <li class=\"flag\">LI class=\"flag\"</li>\n            </ol>\n          </div>\n          <div class=\"dom-tree\">..</div>\n          <div class=\"dom-properties\"domflag>..</div>\n        </section>\n      </section>\n    </section>\n  </body>\n</html>";

}).call(this);
